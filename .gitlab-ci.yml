stages:
  - .pre
  - build
  - test
  - deploy
  - .post

Pre-Build-Environment:
  stage: .pre
  image: arlenlt/android-cross-compiler:latest
  tags:
    - docker
  script:
    - echo $PATH
    - echo $PYENV_ROOT
    - echo $ANDROID_NDK
    - cmake --version

Pre-Build-Environment_win64:
  stage: .pre
  tags:
    - windows
  script:
    - echo $PATH
    - git --version
    - |
      & "${WINRUNNER_CMAKE_DIR}/bin/cmake.exe" --version
    - ls "C:\Program Files\CMake\bin"
    - |
      & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -version [17.0,18.0] -all

.build_arm: &build_arm
  stage: build
  image: arlenlt/android-cross-compiler:latest
  tags:
    - docker
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - chmod +x ./build.sh && ./build.sh --arch=${ARCHITECHTURE}
  artifacts:
    paths:
      - ./arm64

build_arm64:
  <<: *build_arm
  variables:
    ARCHITECHTURE: arm64

build_armv7:
  <<: *build_arm
  variables:
    ARCHITECHTURE: armv7

build_win64:
  stage: build
  tags:
    - windows
  variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_UPDATE_FLAGS: --remote
  script:
    - powershell -file ./build_win64.ps1 "${WINRUNNER_CMAKE_DIR}"
  artifacts:
    paths:
    - ./win64
